set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} @ros_matlab_SOURCE_DIR@/cmake)
include(FindMatlab)
include(MatlabMexMacro)

#link_directories(${MATLAB_BIN})
#include_directories(${MATLAB_INCLUDE_DIR})

set(rosmatlab_SOURCE_DIR "@PROJECT_SOURCE_DIR@")
set(rosmatlab_LIBRARY_DIRS ${MATLAB_ROOT}/extern/lib)
set(PROJECT_MATLAB_INSTALL_DESTINATION matlab)

find_package(cpp_introspection REQUIRED)
include_directories(${cpp_introspection_INCLUDE_DIRS})

include(CMakeParseArguments)
function(add_mex lib)
  cmake_parse_arguments(${lib} "" "OUTPUT_NAME;PACKAGE" "SOURCES" ${ARGN})
  set(${lib}_SOURCES ${${lib}_SOURCES} ${${lib}_UNPARSED_ARGUMENTS})

  ADD_MEX_FILE(${lib} ${${lib}_SOURCES})

	# Prevent deletion of existing lib of same name
	set_target_properties(${lib} PROPERTIES CLEAN_DIRECT_OUTPUT 1)

	if(ROSBUILD_init_called)
		# Attach compile and link flags
		rosbuild_add_compile_flags(${lib} ${${PROJECT_NAME}_CFLAGS_OTHER})
		rosbuild_add_link_flags(${lib} ${${PROJECT_NAME}_LDFLAGS_OTHER})
		# Link lib against dependent libs
		target_link_libraries(${lib} ${${PROJECT_NAME}_LIBRARIES})

		# Add ROS-wide compile and link flags (usually things like -Wall).  These
		# are set in rosconfig.cmake.
		rosbuild_add_compile_flags(${lib} ${ROS_COMPILE_FLAGS})
		rosbuild_add_link_flags(${lib} ${ROS_LINK_FLAGS})

		# Make sure to do any prebuild work (e.g., msg/srv generation) before
		# building this target.
		add_dependencies(${lib} rosbuild_precompile)
	endif()

  if(DEFINED ${lib}_OUTPUT_NAME)
    set_target_properties(${lib} PROPERTIES OUTPUT_NAME "${${lib}_OUTPUT_NAME}")
  endif()

  install(TARGETS ${lib} DESTINATION ${PROJECT_MATLAB_INSTALL_DESTINATION}/${${lib}_PACKAGE})
endfunction()

function(add_mex_messages package)
  if(NOT TARGET mex_${package})
    message(STATUS "Building MEX message library for package ${package}")
    add_subdirectory("${rosmatlab_SOURCE_DIR}/src/messages" "${CMAKE_BINARY_DIR}/rosmatlab_mex_messages/${package}")
  endif()
endfunction()
